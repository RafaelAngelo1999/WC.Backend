// <auto-generated />
using System;
using Infrastructure.Repository.Generics;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace WC.Infra.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211021171311_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WC.Infra.Data.Entities.ImagemProdutoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ProdutoEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoEntityId");

                    b.ToTable("ImagensProduto");

                    b.HasData(
                        new
                        {
                            Id = new Guid("591bc795-32a1-48e0-ab49-37c3b87a142b"),
                            Create_At = new DateTime(2021, 10, 21, 14, 13, 11, 105, DateTimeKind.Local).AddTicks(2466),
                            Name = "Rafael",
                            Update_At = new DateTime(2021, 10, 21, 14, 13, 11, 106, DateTimeKind.Local).AddTicks(1899),
                            Url = "rafael.angelo@gmail.com"
                        });
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.ProdutoEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Categoria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("EstoqueQuantidade")
                        .HasColumnType("real");

                    b.Property<int>("MediaAvaliacao")
                        .HasColumnType("int");

                    b.Property<float>("Preco")
                        .HasColumnType("real");

                    b.Property<float>("PrecoPromocional")
                        .HasColumnType("real");

                    b.Property<string>("SKU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.RotaRamificadaEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("RotaSementeEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WasScraping")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("RotaSementeEntityId");

                    b.ToTable("RotasRamificada");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.RotaSementeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Create_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Pesquisa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Update_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RotasSemente");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.ImagemProdutoEntity", b =>
                {
                    b.HasOne("WC.Infra.Data.Entities.ProdutoEntity", null)
                        .WithMany("Imagens")
                        .HasForeignKey("ProdutoEntityId");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.RotaRamificadaEntity", b =>
                {
                    b.HasOne("WC.Infra.Data.Entities.RotaSementeEntity", null)
                        .WithMany("RotasRamificadas")
                        .HasForeignKey("RotaSementeEntityId");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.ProdutoEntity", b =>
                {
                    b.Navigation("Imagens");
                });

            modelBuilder.Entity("WC.Infra.Data.Entities.RotaSementeEntity", b =>
                {
                    b.Navigation("RotasRamificadas");
                });
#pragma warning restore 612, 618
        }
    }
}
